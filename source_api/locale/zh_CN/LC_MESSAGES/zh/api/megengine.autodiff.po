# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Megvii
# This file is distributed under the same license as the MegEngine Documents
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MegEngine Documents \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-21 16:26+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source_api/zh/api/megengine.autodiff.rst:2
msgid "megengine.autodiff package"
msgstr "megengine.autodiff 模块"

#: ../../source_api/zh/api/megengine.autodiff.rst:11
msgid "megengine.autodiff.grad\\_manager"
msgstr "megengine.autodiff.grad\\_manager"

#: megengine.autodiff.grad_manager.GradManager:1 of
msgid "Bases: :class:`object`"
msgstr "基类：:class:`object`"

#: megengine.autodiff.grad_manager.GradManager:1 of
msgid ""
"GradManager manages auto differentiation and all resources required to "
"perform it."
msgstr "GradManager 管理自动微分和实现自动微分相关的资源。"

#: megengine.autodiff.grad_manager.GradManager:3 of
msgid ""
"Our auto differentiation framework requires that the user explicitly "
"indicates when the forward operations start and when all resources should"
" be released. A typical usage of GradManager is as follows:"
msgstr ""
"我们的自动微分框架需要使用者显式"
"指明何时前向操作开始以及何时所有资源应当"
"会回收。下面展示了 GradManager 的典型用法："

#: megengine.autodiff.grad_manager.GradManager:17 of
msgid ""
"You can also use `record()` and `release()` method instead of `with` "
"context:"
msgstr "你也可以使用 `record()` 和 `release()` 而不使用 `with`"
"语义："

#: megengine.autodiff.grad_manager.GradManager:33 of
msgid ""
"Typically, in data parallel, we would like to average the gradients "
"across processes. Users will finally get the averaged gradients if an "
"\"AllReduce\" callback is registered as follows:"
msgstr ""
"通常，在数据并行的时候，我们需要跨进程计算梯度的均值。"
"使用者最终可获得平均的梯度"
"若一个 \"AllReduce\" 回调函数像下面一样被注册的话："

#: megengine.autodiff.grad_manager.GradManager.attach:1 of
msgid ""
"Registers parameters that gradients should be calculated with respect to."
" Callback Functions should have a signature like this:"
msgstr ""
"记录应计算相对于梯度的参数。"
"回调函数应该有类似下面的签名："

#: megengine.autodiff.grad_manager.GradManager.attach
#: megengine.autodiff.grad_manager.GradManager.backward of
msgid "Parameters"
msgstr "参数"

#: megengine.autodiff.grad_manager.GradManager.attach:10 of
msgid "registered parameters"
msgstr "注册的参数"

#: megengine.autodiff.grad_manager.GradManager.attach:11 of
msgid "list of callback functions"
msgstr "回调函数列表"

#: megengine.autodiff.grad_manager.GradManager.backward:1 of
msgid "Performs back-propagation and computes gradients."
msgstr "反向传播并计算梯度。"

#: megengine.autodiff.grad_manager.GradManager.backward:3 of
msgid "outputs of forward operators, e.g., the loss tensor"
msgstr "前向算子的输出，比如：loss 张量"

#: megengine.autodiff.grad_manager.GradManager.backward:4 of
msgid "derivatives of ys"
msgstr "ys的导数"

#: megengine.autodiff.grad_manager.GradManager.record:1 of
msgid "Starts recording forward operations."
msgstr "开始记录前向运算。"

#: megengine.autodiff.grad_manager.GradManager.release:1 of
msgid "Stops recording and releases resources for gradients calculation."
msgstr "停止记录并释放用于梯度计算的资源。"

